# .github/workflows/playwright.yml
# Full test CI for Playwright + Bun
# This workflow now relies on playwright.config.ts to run the setup wizard.
name: Playwright and Bun Tests

on:
  push: # Test all pushes to protected branches
    branches: [main, next]
  pull_request: # Only PRs targeting main require full testing
    branches: [main]
  workflow_dispatch: {} # Allow manual testing
  workflow_call: {} # Allow being called from other workflows (e.g., auto-release)

jobs:
  test:
    name: SveltyCMS Tests (${{ matrix.mode }}) # Matrix: dev + preview
    timeout-minutes: 60 # Limit long-runs
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false # Donâ€™t cancel dev tests if preview fails
      matrix:
        mode: [dev, preview] # Test both serving modes

    steps:
      # Grab code
      - name: Checkout repository
        uses: actions/checkout@v4

      # Setup Bun environment
      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      # Cache Bun dependencies
      - name: Cache Bun dependencies and Playwright browsers
        uses: actions/cache@v3
        with:
          path: |
            ~/.bun/install/cache
            ~/.cache/ms-playwright
          key: ${{ runner.OS }}-bun-playwright-${{ hashFiles('**/bun.lockb') }}
          restore-keys: |
            ${{ runner.OS }}-bun-playwright-
        continue-on-error: true

      # start monogodb
      - name: Start MongoDB
        uses: supercharge/mongodb-github-action@1.10.0
        with:
          mongodb-version: latest
          mongodb-username: admin
          mongodb-password: admin
          mongodb-db: SveltyCMS
          mongodb-port: 27017

      # Bun faster than npm/pnpm
      - name: Install deps
        run: bun install

      # Web engine support
      - name: Install Playwright browsers
        run: bunx playwright install --with-deps

      # Prepare .svelte-kit
      - name: Sync SvelteKit build internals
        run: bunx svelte-kit sync

      - name: Run Playwright tests
        # We pass all secrets and configs as environment variables
        # so both playwright.config.ts and setup-wizard.spec.ts can access them.
        env:
          # --- Config for playwright.config.ts ---
          CI_MODE: ${{ matrix.mode }}
          PLAYWRIGHT_TEST_BASE_URL: ${{ matrix.mode == 'dev' && 'http://127.0.0.1:5173' || 'http://127.0.0.1:4173' }}

          # --- Config for setup-wizard.spec.ts ---
          MONGO_HOST: localhost
          MONGO_PORT: 27017
          MONGO_DB: SveltyCMS
          MONGO_USER: admin
          MONGO_PASS: admin
          ADMIN_USER: admin
          ADMIN_EMAIL: admin@example.com
          ADMIN_PASS: Admin123!
        run: |
          mkdir -p test-results/playwright
          bunx playwright test --reporter=line --output=test-results/playwright

      # Server-only tests (can run after main tests)
      - name: Run Bun tests (API)
        if: matrix.mode == 'preview'
        env:
          API_BASE_URL: http://127.0.0.1:4173
        run: |
          mkdir -p test-results/bun
          bun test tests/bun > test-results/bun/results.txt

      # CI history + debugging
      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: results-${{ matrix.mode }}
          path: test-results/
          retention-days: 21

      # Crash diagnosis
      - name: Show server logs (debug on failure)
        if: failure()
        run: |
          echo "--- Server logs ---"
          tail -n 200 *.log || true
