# .github/workflows/playwright.yml
# Full test CI for Playwright + Bun, no release logic
name: Playwright and Bun Tests

on:
  push: # Test all pushes to protected branches
    branches: [main, next]
  pull_request: # Only PRs targeting main require full testing
    branches: [main]
  workflow_dispatch: {} # Allow manual testing
  workflow_call: {} # Allow being called from other workflows (e.g., auto-release)

jobs:
  test:
    name: SveltyCMS Tests (${{ matrix.mode }}) # Matrix: dev + preview
    timeout-minutes: 60 # Limit long-runs
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false # Donâ€™t cancel dev tests if preview fails
      matrix:
        mode: [dev, preview] # Test both serving modes

    steps:
      # Grab code
      - name: Checkout repository
        uses: actions/checkout@v4

      # Setup Bun environment
      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      # Cache Bun dependencies
      - name: Cache Bun dependencies and Playwright browsers
        uses: actions/cache@v3
        with:
          path: |
            ~/.bun/install/cache
            ~/.cache/ms-playwright
          key: ${{ runner.OS }}-bun-playwright-${{ hashFiles('**/bun.lockb') }}
          restore-keys: |
            ${{ runner.OS }}-bun-playwright-
        continue-on-error: true

      - name: Start MongoDB
        uses: supercharge/mongodb-github-action@1.10.0
        with:
          mongodb-version: latest
          mongodb-username: admin
          mongodb-password: admin
          mongodb-db: SveltyCMS
          mongodb-port: 27017

      # Bun faster than npm/pnpm
      - name: Install deps
        run: bun install

      # Web engine support
      - name: Install Playwright browsers
        run: bunx playwright install --with-deps

      # Seed database and create admin user for tests (BEFORE building/starting server)
      - name: Seed SveltyCMS database
        run: bun run scripts/seed-cms.js
        env:
          MONGO_HOST: localhost
          MONGO_PORT: 27017
          MONGO_DB: SveltyCMS
          MONGO_USER: admin
          MONGO_PASS: admin

      - name: Create SveltyCMS admin user
        run: bun run scripts/create-admin.js
        env:
          MONGO_HOST: localhost
          MONGO_PORT: 27017
          MONGO_DB: SveltyCMS
          MONGO_USER: admin
          MONGO_PASS: admin
          ADMIN_USER: admin
          ADMIN_EMAIL: admin@example.com
          ADMIN_PASS: Admin123!

      - name: Sync SvelteKit build internals # Prepare .svelte-kit
        run: bunx svelte-kit sync

      # Only for preview testing
      - name: Build site (preview only)
        if: matrix.mode == 'preview'
        run: bunx vite build

      # Launch correct server mode
      - name: Start server
        run: |
          if [ "${{ matrix.mode }}" = "dev" ]; then
            bunx vite dev --port 5173 --host 127.0.0.1 > dev.log 2>&1 &
          else
            bunx vite preview --port 4173 --host 127.0.0.1 > preview.log 2>&1 &
          fi
          echo $! > server.pid

      # Ensure alive before testing
      - name: Wait for server
        run: |
          if [ "${{ matrix.mode }}" = "dev" ]; then
            bunx wait-on http://127.0.0.1:5173 -t 120000
          else
            bunx wait-on http://127.0.0.1:4173 -t 120000
          fi

      - name: Show server logs (on failure)
        if: failure()
        run: |
          if [ "${{ matrix.mode }}" = "dev" ]; then
            echo "--- dev.log (last 200 lines) ---"
            tail -n 200 dev.log || true
          else
            echo "--- preview.log (last 200 lines) ---"
            tail -n 200 preview.log || true
          fi

      - name: Run Playwright tests
        env:
          PLAYWRIGHT_TEST_BASE_URL: ${{ matrix.mode == 'dev' && 'http://127.0.0.1:5173' || 'http://127.0.0.1:4173' }}
        run: |
          mkdir -p test-results/playwright
          bunx playwright test --reporter=line --output=test-results/playwright

      # Server-only tests
      - name: Run Bun tests (API)
        if: matrix.mode == 'preview'
        env:
          API_BASE_URL: http://127.0.0.1:4173
        run: |
          mkdir -p test-results/bun
          bun test tests/bun > test-results/bun/results.txt

      # Free runner resources
      - name: Kill server
        if: always()
        run: kill $(cat server.pid) || true

      # CI history + debugging
      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: results-${{ matrix.mode }}
          path: test-results/
          retention-days: 21

      # Crash diagnosis
      - name: Show server logs (debug on failure)
        if: failure()
        run: |
          echo "--- Server logs ---"
          tail -n 200 *.log || true
